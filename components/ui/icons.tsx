'use client'

import * as React from 'react'

import { cn } from '@/lib/utils'

function IconNextChat({
  className,
  inverted,
  ...props
}: React.ComponentProps<'svg'> & { inverted?: boolean }) {
  const id = React.useId()

  return (
    <svg
      viewBox="0 0 17 17"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <defs>
        <linearGradient
          id={`gradient-${id}-1`}
          x1="10.6889"
          y1="10.3556"
          x2="13.8445"
          y2="14.2667"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor={inverted ? 'currentColor' : 'black'} />
          <stop
            offset={1}
            stopColor={inverted ? 'currentColor' : 'black'}
            stopOpacity={0}
          />
        </linearGradient>
        <linearGradient
          id={`gradient-${id}-2`}
          x1="11.7555"
          y1="4.8"
          x2="11.7376"
          y2="9.50002"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor={inverted ? 'currentColor' : 'black'} />
          <stop
            offset={1}
            stopColor={inverted ? 'currentColor' : 'black'}
            stopOpacity={0}
          />
        </linearGradient>
      </defs>
      <path
        d="M1 16L2.58314 11.2506C1.83084 9.74642 1.63835 8.02363 2.04013 6.39052C2.4419 4.75741 3.41171 3.32057 4.776 2.33712C6.1403 1.35367 7.81003 0.887808 9.4864 1.02289C11.1628 1.15798 12.7364 1.8852 13.9256 3.07442C15.1148 4.26363 15.842 5.83723 15.9771 7.5136C16.1122 9.18997 15.6463 10.8597 14.6629 12.224C13.6794 13.5883 12.2426 14.5581 10.6095 14.9599C8.97637 15.3616 7.25358 15.1692 5.74942 14.4169L1 16Z"
        fill={inverted ? 'black' : 'currentColor'}
        stroke={inverted ? 'black' : 'currentColor'}
        strokeWidth={2}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <mask
        id="mask0_91_2047"
        style={{ maskType: 'alpha' }}
        maskUnits="userSpaceOnUse"
        x={1}
        y={0}
        width={16}
        height={16}
      >
        <circle
          cx={9}
          cy={8}
          r={8}
          fill={inverted ? 'black' : 'currentColor'}
        />
      </mask>
      <g mask="url(#mask0_91_2047)">
        <circle
          cx={9}
          cy={8}
          r={8}
          fill={inverted ? 'black' : 'currentColor'}
        />
        <path
          d="M14.2896 14.0018L7.146 4.8H5.80005V11.1973H6.87681V6.16743L13.4444 14.6529C13.7407 14.4545 14.0231 14.2369 14.2896 14.0018Z"
          fill={`url(#gradient-${id}-1)`}
        />
        <rect
          x="11.2222"
          y="4.8"
          width="1.06667"
          height="6.4"
          fill={`url(#gradient-${id}-2)`}
        />
      </g>
    </svg>
  )
}

function IconGitHub({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      role="img"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <title>GitHub</title>
      <path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12" />
    </svg>
  )
}

function IconBpm({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      width="310"
      height="137"
      viewBox="0 0 310 137"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('h-32 w-32', className)}
      {...props}
    >
      <path
        d="M8.99988 127.5L52.7547 83.7452C62.0037 74.4962 66.6282 69.8717 72.5088 67.4359C78.3895 65 84.9295 65 98.0095 65L174.5 65"
        stroke="currentColor"
        strokeWidth="2"
      />
      <g filter="url(#filter0_d_2111_1609)">
        <path
          d="M6.55676 122.7C7.72455 121.921 9.24591 121.921 10.4137 122.7C11.9414 123.718 13.2522 125.029 14.2706 126.557C15.0492 127.725 15.0492 129.246 14.2706 130.414C13.2522 131.941 11.9414 133.252 10.4137 134.271C9.24591 135.049 7.72455 135.049 6.55676 134.271C5.02911 133.252 3.71824 131.941 2.69981 130.414C1.92128 129.246 1.92128 127.725 2.69981 126.557C3.71824 125.029 5.02911 123.718 6.55676 122.7Z"
          fill="currentColor"
          shapeRendering="crispEdges"
        />
        <path
          d="M10.9684 121.868C9.46471 120.865 7.50574 120.865 6.00206 121.868C4.36455 122.959 2.95943 124.365 1.86776 126.002C0.865302 127.506 0.865302 129.465 1.86776 130.968C2.95943 132.606 4.36455 134.011 6.00206 135.103C7.50574 136.105 9.46471 136.105 10.9684 135.103C12.6059 134.011 14.011 132.606 15.1027 130.968C16.1052 129.465 16.1052 127.506 15.1027 126.002C14.011 124.365 12.6059 122.959 10.9684 121.868Z"
          stroke="currentColor"
          strokeOpacity="0.32"
          strokeWidth="2"
          strokeLinejoin="round"
          shapeRendering="crispEdges"
        />
      </g>
      <path
        d="M138.55 18.8831L140.574 20.9078C140.809 21.1428 141.191 21.1428 141.426 20.9078L143.45 18.8831C145.172 17.1614 147.802 16.7345 149.98 17.8234C151.075 18.3708 151.963 19.2585 152.51 20.3533L152.782 20.8969C153.766 22.865 153.833 25.1665 152.967 27.1889L152.908 27.3256C151.237 31.2242 148.341 34.4719 144.658 36.5763L143.373 37.3105C141.903 38.1509 140.097 38.1509 138.627 37.3105L137.342 36.5763C133.659 34.4719 130.763 31.2242 129.092 27.3256L129.033 27.1889C128.167 25.1665 128.234 22.865 129.218 20.8969L129.49 20.3533C130.037 19.2585 130.925 18.3708 132.02 17.8234C134.198 16.7345 136.828 17.1614 138.55 18.8831Z"
        fill="#F97316"
      />
      <path
        d="M170.419 44V25.76C170.419 24.928 170.419 24.08 170.419 23.216C170.451 22.32 170.467 21.408 170.467 20.48C169.411 21.44 168.243 22.288 166.963 23.024C165.683 23.728 164.339 24.208 162.931 24.464L162.163 17.648C162.995 17.584 163.875 17.376 164.803 17.024C165.763 16.672 166.707 16.24 167.635 15.728C168.563 15.216 169.395 14.672 170.131 14.096C170.867 13.488 171.427 12.896 171.811 12.32H178.387V44H170.419ZM184.083 44V38.72C186.803 37.024 189.123 35.44 191.043 33.968C192.963 32.496 194.515 31.104 195.699 29.792C196.915 28.48 197.811 27.232 198.387 26.048C198.963 24.864 199.251 23.712 199.251 22.592C199.251 21.376 198.883 20.368 198.147 19.568C197.443 18.736 196.387 18.32 194.979 18.32C193.475 18.32 192.307 18.88 191.475 20C190.643 21.088 190.195 22.688 190.131 24.8L183.075 22.64C183.139 20.272 183.699 18.288 184.755 16.688C185.843 15.088 187.315 13.888 189.171 13.088C191.027 12.256 193.139 11.84 195.507 11.84C197.587 11.84 199.379 12.144 200.883 12.752C202.419 13.328 203.667 14.112 204.627 15.104C205.587 16.064 206.291 17.152 206.739 18.368C207.219 19.552 207.459 20.768 207.459 22.016C207.459 24.064 206.931 25.984 205.875 27.776C204.819 29.536 203.283 31.248 201.267 32.912C199.283 34.544 196.867 36.192 194.019 37.856V37.904C194.563 37.872 195.203 37.84 195.939 37.808C196.675 37.776 197.443 37.76 198.243 37.76C199.043 37.728 199.763 37.712 200.403 37.712H207.843V44H184.083ZM218.245 44V25.76C218.245 24.928 218.245 24.08 218.245 23.216C218.277 22.32 218.293 21.408 218.293 20.48C217.237 21.44 216.069 22.288 214.789 23.024C213.509 23.728 212.165 24.208 210.757 24.464L209.989 17.648C210.821 17.584 211.701 17.376 212.629 17.024C213.589 16.672 214.533 16.24 215.461 15.728C216.389 15.216 217.221 14.672 217.957 14.096C218.693 13.488 219.253 12.896 219.637 12.32H226.213V44H218.245Z"
        fill="currentColor"
      />
      <path
        d="M242.424 44.24C241.72 44.24 241.072 44.104 240.48 43.832C239.904 43.56 239.416 43.184 239.016 42.704C238.616 42.208 238.32 41.656 238.128 41.048L238.44 40.64L238.248 44H235.992V26.6H238.56V35.024L238.272 34.616C238.576 33.784 239.096 33.104 239.832 32.576C240.568 32.032 241.456 31.76 242.496 31.76C243.456 31.76 244.336 32.008 245.136 32.504C245.952 33 246.592 33.712 247.056 34.64C247.52 35.568 247.752 36.696 247.752 38.024C247.752 39.32 247.512 40.432 247.032 41.36C246.568 42.288 245.928 43 245.112 43.496C244.312 43.992 243.416 44.24 242.424 44.24ZM241.872 42.176C242.912 42.176 243.72 41.808 244.296 41.072C244.888 40.32 245.184 39.296 245.184 38C245.184 36.704 244.896 35.688 244.32 34.952C243.744 34.216 242.936 33.848 241.896 33.848C241.224 33.848 240.64 34.024 240.144 34.376C239.648 34.712 239.256 35.192 238.968 35.816C238.696 36.44 238.56 37.184 238.56 38.048C238.56 38.896 238.696 39.632 238.968 40.256C239.24 40.864 239.624 41.336 240.12 41.672C240.632 42.008 241.216 42.176 241.872 42.176ZM250.847 49.04V32H253.127L253.319 35.36L252.983 34.952C253.175 34.328 253.471 33.776 253.871 33.296C254.271 32.816 254.767 32.44 255.359 32.168C255.967 31.896 256.631 31.76 257.351 31.76C258.327 31.76 259.215 32.008 260.015 32.504C260.815 33 261.447 33.712 261.911 34.64C262.375 35.552 262.607 36.664 262.607 37.976C262.607 39.288 262.367 40.416 261.887 41.36C261.423 42.288 260.783 43 259.967 43.496C259.167 43.992 258.271 44.24 257.279 44.24C256.255 44.24 255.383 43.976 254.663 43.448C253.943 42.904 253.431 42.216 253.127 41.384L253.415 40.976V49.04H250.847ZM256.727 42.152C257.767 42.152 258.575 41.784 259.151 41.048C259.743 40.312 260.039 39.296 260.039 38C260.039 36.704 259.751 35.688 259.175 34.952C258.599 34.2 257.799 33.824 256.775 33.824C256.103 33.824 255.511 34 254.999 34.352C254.503 34.688 254.111 35.168 253.823 35.792C253.551 36.4 253.415 37.136 253.415 38C253.415 38.848 253.551 39.584 253.823 40.208C254.095 40.832 254.479 41.312 254.975 41.648C255.471 41.984 256.055 42.152 256.727 42.152ZM265.702 44V32H267.982L268.102 34.016C268.518 33.248 269.07 32.68 269.758 32.312C270.462 31.944 271.206 31.76 271.99 31.76C272.854 31.76 273.646 31.96 274.366 32.36C275.102 32.744 275.654 33.328 276.022 34.112C276.278 33.584 276.63 33.144 277.078 32.792C277.526 32.44 278.022 32.184 278.566 32.024C279.11 31.848 279.646 31.76 280.174 31.76C280.942 31.76 281.662 31.92 282.334 32.24C283.006 32.56 283.55 33.048 283.966 33.704C284.382 34.36 284.59 35.2 284.59 36.224V44H282.022V36.632C282.022 35.656 281.79 34.952 281.326 34.52C280.862 34.088 280.27 33.872 279.55 33.872C278.99 33.872 278.47 34.008 277.99 34.28C277.526 34.552 277.15 34.96 276.862 35.504C276.574 36.032 276.43 36.688 276.43 37.472V44H273.862V36.632C273.862 35.656 273.63 34.952 273.166 34.52C272.702 34.088 272.11 33.872 271.39 33.872C270.91 33.872 270.43 34 269.95 34.256C269.47 34.512 269.07 34.912 268.75 35.456C268.43 36 268.27 36.72 268.27 37.616V44H265.702Z"
        fill="#9EA0A5"
      />
      <path
        d="M106 66C109.842 62.1583 115.052 60 120.485 60H293.515C298.948 60 304.158 62.1583 308 66H106Z"
        fill="currentColor"
      />
      <defs>
        <filter
          id="filter0_d_2111_1609"
          x="0.115967"
          y="120.116"
          width="16.7385"
          height="16.7383"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.25 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow_2111_1609"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect1_dropShadow_2111_1609"
            result="shape"
          />
        </filter>
      </defs>
    </svg>
  )
}

function IconKcal({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      width="308"
      height="137"
      viewBox="0 0 308 137"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('h-32 w-32', className)}
      {...props}
    >
      <path
        d="M299 127.5L255.245 83.7452C245.996 74.4962 241.372 69.8717 235.491 67.4359C229.61 65 223.07 65 209.99 65L133.5 65"
        stroke="currentColor"
        strokeWidth="2"
      />
      <g filter="url(#filter0_d_2111_1614)">
        <path
          d="M301.443 122.7C300.275 121.921 298.754 121.921 297.586 122.7C296.058 123.718 294.748 125.029 293.729 126.557C292.951 127.725 292.951 129.246 293.729 130.414C294.748 131.941 296.058 133.252 297.586 134.271C298.754 135.049 300.275 135.049 301.443 134.271C302.971 133.252 304.282 131.941 305.3 130.414C306.079 129.246 306.079 127.725 305.3 126.557C304.282 125.029 302.971 123.718 301.443 122.7Z"
          fill="currentColor"
          shapeRendering="crispEdges"
        />
        <path
          d="M297.031 121.868C298.535 120.865 300.494 120.865 301.998 121.868C303.635 122.959 305.04 124.365 306.132 126.002C307.135 127.506 307.135 129.465 306.132 130.968C305.04 132.606 303.635 134.011 301.998 135.103C300.494 136.105 298.535 136.105 297.031 135.103C295.394 134.011 293.989 132.606 292.897 130.968C291.895 129.465 291.895 127.506 292.897 126.002C293.989 124.365 295.394 122.959 297.031 121.868Z"
          stroke="currentColor"
          strokeOpacity="0.32"
          strokeWidth="2"
          strokeLinejoin="round"
          shapeRendering="crispEdges"
        />
      </g>
      <path
        d="M20.4053 17.6508C18.7178 16.4454 16.4258 17.9274 16.8325 19.9609L17.4004 22.8007C17.4955 23.2761 17.3467 23.7675 17.0039 24.1103C16.5152 24.599 15.7495 24.6748 15.1745 24.2915L13.8744 23.4247C12.7567 22.6796 11.2365 23.1518 10.7377 24.399L9.70648 26.9769C8.7766 29.3016 8.54295 31.8466 9.03397 34.3017C9.53507 36.8072 11.3403 38.8521 13.7642 39.6601L14.3014 39.8391C17.3513 40.8558 20.6487 40.8558 23.6986 39.8391L24.0607 39.7184C26.5929 38.8743 28.4788 36.7381 29.0023 34.1207L29.1038 33.613C29.4928 31.668 29.4928 29.6651 29.1038 27.72C28.5257 24.8298 26.8693 22.2679 24.4708 20.5548L20.4053 17.6508Z"
        fill="#EF4444"
      />
      <path
        d="M41.975 44V38.72C44.695 37.024 47.015 35.44 48.935 33.968C50.855 32.496 52.407 31.104 53.591 29.792C54.807 28.48 55.703 27.232 56.279 26.048C56.855 24.864 57.143 23.712 57.143 22.592C57.143 21.376 56.775 20.368 56.039 19.568C55.335 18.736 54.279 18.32 52.871 18.32C51.367 18.32 50.199 18.88 49.367 20C48.535 21.088 48.087 22.688 48.023 24.8L40.967 22.64C41.031 20.272 41.591 18.288 42.647 16.688C43.735 15.088 45.207 13.888 47.063 13.088C48.919 12.256 51.031 11.84 53.399 11.84C55.479 11.84 57.271 12.144 58.775 12.752C60.311 13.328 61.559 14.112 62.519 15.104C63.479 16.064 64.183 17.152 64.631 18.368C65.111 19.552 65.351 20.768 65.351 22.016C65.351 24.064 64.823 25.984 63.767 27.776C62.711 29.536 61.175 31.248 59.159 32.912C57.175 34.544 54.759 36.192 51.911 37.856V37.904C52.455 37.872 53.095 37.84 53.831 37.808C54.567 37.776 55.335 37.76 56.135 37.76C56.935 37.728 57.655 37.712 58.295 37.712H65.735V44H41.975ZM80.6968 44.48C77.9448 44.48 75.5448 43.952 73.4968 42.896C71.4808 41.808 69.7848 40.048 68.4088 37.616L75.6568 34.016C76.0088 35.296 76.5688 36.32 77.3368 37.088C78.1368 37.856 79.3208 38.24 80.8888 38.24C81.8808 38.24 82.7288 38.064 83.4328 37.712C84.1368 37.36 84.6808 36.848 85.0648 36.176C85.4808 35.472 85.6888 34.624 85.6888 33.632C85.6888 32.672 85.4968 31.872 85.1128 31.232C84.7608 30.592 84.2328 30.112 83.5288 29.792C82.8248 29.44 81.9448 29.264 80.8888 29.264C80.1208 29.264 79.4328 29.344 78.8248 29.504C78.2168 29.632 77.6568 29.84 77.1448 30.128C76.6648 30.384 76.2168 30.72 75.8008 31.136L69.5608 29.984L71.5768 12.32H91.5448V18.704H77.5768L76.7608 25.04L76.6168 25.808H76.6648C77.3048 25.072 78.2008 24.512 79.3528 24.128C80.5048 23.744 81.7848 23.552 83.1928 23.552C85.2728 23.552 87.0488 23.968 88.5208 24.8C89.9928 25.632 91.1288 26.768 91.9288 28.208C92.7288 29.648 93.1288 31.296 93.1288 33.152C93.1288 35.104 92.7928 36.8 92.1208 38.24C91.4808 39.648 90.5688 40.816 89.3848 41.744C88.2328 42.672 86.9048 43.36 85.4008 43.808C83.9288 44.256 82.3608 44.48 80.6968 44.48ZM103.401 44V25.76C103.401 24.928 103.401 24.08 103.401 23.216C103.433 22.32 103.449 21.408 103.449 20.48C102.393 21.44 101.225 22.288 99.9451 23.024C98.6651 23.728 97.3211 24.208 95.9131 24.464L95.1451 17.648C95.9771 17.584 96.8571 17.376 97.7851 17.024C98.7451 16.672 99.6891 16.24 100.617 15.728C101.545 15.216 102.377 14.672 103.113 14.096C103.849 13.488 104.409 12.896 104.793 12.32H111.369V44H103.401Z"
        fill="currentColor"
      />
      <path
        d="M132.32 32L126.968 37.472L126.416 37.856L122.648 41.768L122.624 38.84L129.272 32H132.32ZM123.56 26.6V44H120.992V26.6H123.56ZM127.28 36.032L132.608 44H129.632L125.36 37.496L127.28 36.032ZM139.484 31.76C140.444 31.76 141.26 31.904 141.932 32.192C142.62 32.464 143.196 32.856 143.66 33.368C144.124 33.88 144.476 34.464 144.716 35.12L142.292 36.08C142.084 35.344 141.748 34.784 141.284 34.4C140.836 34 140.244 33.8 139.508 33.8C138.788 33.8 138.172 33.968 137.66 34.304C137.148 34.624 136.756 35.096 136.484 35.72C136.228 36.344 136.1 37.112 136.1 38.024C136.1 38.92 136.236 39.68 136.508 40.304C136.78 40.928 137.172 41.4 137.684 41.72C138.196 42.04 138.804 42.2 139.508 42.2C140.052 42.2 140.524 42.112 140.924 41.936C141.324 41.744 141.652 41.48 141.908 41.144C142.18 40.792 142.364 40.368 142.46 39.872L144.788 40.664C144.564 41.384 144.212 42.016 143.732 42.56C143.268 43.088 142.684 43.504 141.98 43.808C141.276 44.096 140.468 44.24 139.556 44.24C138.372 44.24 137.324 43.992 136.412 43.496C135.5 43 134.788 42.288 134.276 41.36C133.78 40.416 133.532 39.296 133.532 38C133.532 36.704 133.78 35.592 134.276 34.664C134.788 33.72 135.492 33 136.388 32.504C137.3 32.008 138.332 31.76 139.484 31.76ZM154.521 36.296C154.521 35.496 154.297 34.88 153.849 34.448C153.417 34 152.817 33.776 152.049 33.776C151.329 33.776 150.713 33.944 150.201 34.28C149.689 34.616 149.313 35.16 149.073 35.912L146.913 35C147.217 34.024 147.809 33.24 148.689 32.648C149.585 32.056 150.737 31.76 152.145 31.76C153.105 31.76 153.953 31.92 154.689 32.24C155.425 32.544 156.001 33.008 156.417 33.632C156.849 34.256 157.065 35.056 157.065 36.032V41.384C157.065 41.976 157.361 42.272 157.953 42.272C158.241 42.272 158.521 42.232 158.793 42.152L158.649 43.928C158.281 44.104 157.817 44.192 157.257 44.192C156.745 44.192 156.281 44.104 155.865 43.928C155.465 43.736 155.145 43.456 154.905 43.088C154.681 42.704 154.569 42.232 154.569 41.672V41.504L155.097 41.48C154.953 42.104 154.657 42.624 154.209 43.04C153.761 43.44 153.241 43.744 152.649 43.952C152.057 44.144 151.457 44.24 150.849 44.24C150.097 44.24 149.417 44.12 148.809 43.88C148.217 43.64 147.745 43.28 147.393 42.8C147.057 42.304 146.889 41.696 146.889 40.976C146.889 40.08 147.177 39.344 147.753 38.768C148.345 38.192 149.177 37.8 150.249 37.592L154.905 36.68L154.881 38.48L151.497 39.176C150.825 39.304 150.321 39.488 149.985 39.728C149.649 39.968 149.481 40.32 149.481 40.784C149.481 41.232 149.649 41.592 149.985 41.864C150.337 42.12 150.801 42.248 151.377 42.248C151.777 42.248 152.161 42.2 152.529 42.104C152.913 42.008 153.257 41.856 153.561 41.648C153.865 41.424 154.097 41.144 154.257 40.808C154.433 40.456 154.521 40.04 154.521 39.56V36.296ZM163.576 26.6V40.64C163.576 41.232 163.68 41.64 163.888 41.864C164.096 42.088 164.44 42.2 164.92 42.2C165.208 42.2 165.448 42.184 165.64 42.152C165.848 42.104 166.104 42.024 166.408 41.912L166.12 43.832C165.848 43.96 165.536 44.056 165.184 44.12C164.832 44.2 164.48 44.24 164.128 44.24C163.056 44.24 162.264 43.968 161.752 43.424C161.256 42.864 161.008 42.008 161.008 40.856V26.6H163.576Z"
        fill="#9EA0A5"
      />
      <path
        d="M202 66C198.158 62.1583 192.948 60 187.515 60H14.4853C9.05223 60 3.84174 62.1583 0 66H202Z"
        fill="currentColor"
      />
      <defs>
        <filter
          id="filter0_d_2111_1614"
          x="291.145"
          y="120.116"
          width="16.7386"
          height="16.7383"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.25 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow_2111_1614"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect1_dropShadow_2111_1614"
            result="shape"
          />
        </filter>
      </defs>
    </svg>
  )
}

function IconSeparator({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      fill="none"
      shapeRendering="geometricPrecision"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="1"
      viewBox="0 0 24 24"
      aria-hidden="true"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M16.88 3.549L7.12 20.451"></path>
    </svg>
  )
}

function IconArrowDown({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="m205.66 149.66-72 72a8 8 0 0 1-11.32 0l-72-72a8 8 0 0 1 11.32-11.32L120 196.69V40a8 8 0 0 1 16 0v156.69l58.34-58.35a8 8 0 0 1 11.32 11.32Z" />
    </svg>
  )
}

function IconArrowRight({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="m221.66 133.66-72 72a8 8 0 0 1-11.32-11.32L196.69 136H40a8 8 0 0 1 0-16h156.69l-58.35-58.34a8 8 0 0 1 11.32-11.32l72 72a8 8 0 0 1 0 11.32Z" />
    </svg>
  )
}

function IconUser({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M230.92 212c-15.23-26.33-38.7-45.21-66.09-54.16a72 72 0 1 0-73.66 0c-27.39 8.94-50.86 27.82-66.09 54.16a8 8 0 1 0 13.85 8c18.84-32.56 52.14-52 89.07-52s70.23 19.44 89.07 52a8 8 0 1 0 13.85-8ZM72 96a56 56 0 1 1 56 56 56.06 56.06 0 0 1-56-56Z" />
    </svg>
  )
}

function IconPlus({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M224 128a8 8 0 0 1-8 8h-80v80a8 8 0 0 1-16 0v-80H40a8 8 0 0 1 0-16h80V40a8 8 0 0 1 16 0v80h80a8 8 0 0 1 8 8Z" />
    </svg>
  )
}

function IconArrowElbow({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M200 32v144a8 8 0 0 1-8 8H67.31l34.35 34.34a8 8 0 0 1-11.32 11.32l-48-48a8 8 0 0 1 0-11.32l48-48a8 8 0 0 1 11.32 11.32L67.31 168H184V32a8 8 0 0 1 16 0Z" />
    </svg>
  )
}

function IconSpinner({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4 animate-spin', className)}
      {...props}
    >
      <path d="M232 128a104 104 0 0 1-208 0c0-41 23.81-78.36 60.66-95.27a8 8 0 0 1 6.68 14.54C60.15 61.59 40 93.27 40 128a88 88 0 0 0 176 0c0-34.73-20.15-66.41-51.34-80.73a8 8 0 0 1 6.68-14.54C208.19 49.64 232 87 232 128Z" />
    </svg>
  )
}

function IconMessage({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M216 48H40a16 16 0 0 0-16 16v160a15.84 15.84 0 0 0 9.25 14.5A16.05 16.05 0 0 0 40 240a15.89 15.89 0 0 0 10.25-3.78.69.69 0 0 0 .13-.11L82.5 208H216a16 16 0 0 0 16-16V64a16 16 0 0 0-16-16ZM40 224Zm176-32H82.5a16 16 0 0 0-10.3 3.75l-.12.11L40 224V64h176Z" />
    </svg>
  )
}

function IconTrash({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M216 48h-40v-8a24 24 0 0 0-24-24h-48a24 24 0 0 0-24 24v8H40a8 8 0 0 0 0 16h8v144a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16V64h8a8 8 0 0 0 0-16ZM96 40a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v8H96Zm96 168H64V64h128Zm-80-104v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Zm48 0v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Z" />
    </svg>
  )
}

function IconRefresh({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M197.67 186.37a8 8 0 0 1 0 11.29C196.58 198.73 170.82 224 128 224c-37.39 0-64.53-22.4-80-39.85V208a8 8 0 0 1-16 0v-48a8 8 0 0 1 8-8h48a8 8 0 0 1 0 16H55.44C67.76 183.35 93 208 128 208c36 0 58.14-21.46 58.36-21.68a8 8 0 0 1 11.31.05ZM216 40a8 8 0 0 0-8 8v23.85C192.53 54.4 165.39 32 128 32c-42.82 0-68.58 25.27-69.66 26.34a8 8 0 0 0 11.3 11.34C69.86 69.46 92 48 128 48c35 0 60.24 24.65 72.56 40H168a8 8 0 0 0 0 16h48a8 8 0 0 0 8-8V48a8 8 0 0 0-8-8Z" />
    </svg>
  )
}

function IconStop({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M128 24a104 104 0 1 0 104 104A104.11 104.11 0 0 0 128 24Zm0 192a88 88 0 1 1 88-88 88.1 88.1 0 0 1-88 88Zm24-120h-48a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8Zm-8 48h-32v-32h32Z" />
    </svg>
  )
}

function IconSidebar({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M216 40H40a16 16 0 0 0-16 16v144a16 16 0 0 0 16 16h176a16 16 0 0 0 16-16V56a16 16 0 0 0-16-16ZM40 56h40v144H40Zm176 144H96V56h120v144Z" />
    </svg>
  )
}

function IconMoon({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M233.54 142.23a8 8 0 0 0-8-2 88.08 88.08 0 0 1-109.8-109.8 8 8 0 0 0-10-10 104.84 104.84 0 0 0-52.91 37A104 104 0 0 0 136 224a103.09 103.09 0 0 0 62.52-20.88 104.84 104.84 0 0 0 37-52.91 8 8 0 0 0-1.98-7.98Zm-44.64 48.11A88 88 0 0 1 65.66 67.11a89 89 0 0 1 31.4-26A106 106 0 0 0 96 56a104.11 104.11 0 0 0 104 104 106 106 0 0 0 14.92-1.06 89 89 0 0 1-26.02 31.4Z" />
    </svg>
  )
}

function IconSun({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M120 40V16a8 8 0 0 1 16 0v24a8 8 0 0 1-16 0Zm72 88a64 64 0 1 1-64-64 64.07 64.07 0 0 1 64 64Zm-16 0a48 48 0 1 0-48 48 48.05 48.05 0 0 0 48-48ZM58.34 69.66a8 8 0 0 0 11.32-11.32l-16-16a8 8 0 0 0-11.32 11.32Zm0 116.68-16 16a8 8 0 0 0 11.32 11.32l16-16a8 8 0 0 0-11.32-11.32ZM192 72a8 8 0 0 0 5.66-2.34l16-16a8 8 0 0 0-11.32-11.32l-16 16A8 8 0 0 0 192 72Zm5.66 114.34a8 8 0 0 0-11.32 11.32l16 16a8 8 0 0 0 11.32-11.32ZM48 128a8 8 0 0 0-8-8H16a8 8 0 0 0 0 16h24a8 8 0 0 0 8-8Zm80 80a8 8 0 0 0-8 8v24a8 8 0 0 0 16 0v-24a8 8 0 0 0-8-8Zm112-88h-24a8 8 0 0 0 0 16h24a8 8 0 0 0 0-16Z" />
    </svg>
  )
}

function IconCopy({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M216 32H88a8 8 0 0 0-8 8v40H40a8 8 0 0 0-8 8v128a8 8 0 0 0 8 8h128a8 8 0 0 0 8-8v-40h40a8 8 0 0 0 8-8V40a8 8 0 0 0-8-8Zm-56 176H48V96h112Zm48-48h-32V88a8 8 0 0 0-8-8H96V48h112Z" />
    </svg>
  )
}

function IconCheck({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="m229.66 77.66-128 128a8 8 0 0 1-11.32 0l-56-56a8 8 0 0 1 11.32-11.32L96 188.69 218.34 66.34a8 8 0 0 1 11.32 11.32Z" />
    </svg>
  )
}

function IconDownload({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M224 152v56a16 16 0 0 1-16 16H48a16 16 0 0 1-16-16v-56a8 8 0 0 1 16 0v56h160v-56a8 8 0 0 1 16 0Zm-101.66 5.66a8 8 0 0 0 11.32 0l40-40a8 8 0 0 0-11.32-11.32L136 132.69V40a8 8 0 0 0-16 0v92.69l-26.34-26.35a8 8 0 0 0-11.32 11.32Z" />
    </svg>
  )
}

function IconClose({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M205.66 194.34a8 8 0 0 1-11.32 11.32L128 139.31l-66.34 66.35a8 8 0 0 1-11.32-11.32L116.69 128 50.34 61.66a8 8 0 0 1 11.32-11.32L128 116.69l66.34-66.35a8 8 0 0 1 11.32 11.32L139.31 128Z" />
    </svg>
  )
}

function IconEdit({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10"
      />
    </svg>
  )
}

function IconShare({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="m237.66 106.35-80-80A8 8 0 0 0 144 32v40.35c-25.94 2.22-54.59 14.92-78.16 34.91-28.38 24.08-46.05 55.11-49.76 87.37a12 12 0 0 0 20.68 9.58c11-11.71 50.14-48.74 107.24-52V192a8 8 0 0 0 13.66 5.65l80-80a8 8 0 0 0 0-11.3ZM160 172.69V144a8 8 0 0 0-8-8c-28.08 0-55.43 7.33-81.29 21.8a196.17 196.17 0 0 0-36.57 26.52c5.8-23.84 20.42-46.51 42.05-64.86C99.41 99.77 127.75 88 152 88a8 8 0 0 0 8-8V51.32L220.69 112Z" />
    </svg>
  )
}

function IconUsers({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M117.25 157.92a60 60 0 1 0-66.5 0 95.83 95.83 0 0 0-47.22 37.71 8 8 0 1 0 13.4 8.74 80 80 0 0 1 134.14 0 8 8 0 0 0 13.4-8.74 95.83 95.83 0 0 0-47.22-37.71ZM40 108a44 44 0 1 1 44 44 44.05 44.05 0 0 1-44-44Zm210.14 98.7a8 8 0 0 1-11.07-2.33A79.83 79.83 0 0 0 172 168a8 8 0 0 1 0-16 44 44 0 1 0-16.34-84.87 8 8 0 1 1-5.94-14.85 60 60 0 0 1 55.53 105.64 95.83 95.83 0 0 1 47.22 37.71 8 8 0 0 1-2.33 11.07Z" />
    </svg>
  )
}

function IconExternalLink({
  className,
  ...props
}: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M224 104a8 8 0 0 1-16 0V59.32l-66.33 66.34a8 8 0 0 1-11.32-11.32L196.68 48H152a8 8 0 0 1 0-16h64a8 8 0 0 1 8 8Zm-40 24a8 8 0 0 0-8 8v72H48V80h72a8 8 0 0 0 0-16H48a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-72a8 8 0 0 0-8-8Z" />
    </svg>
  )
}

function IconChevronUpDown({
  className,
  ...props
}: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M181.66 170.34a8 8 0 0 1 0 11.32l-48 48a8 8 0 0 1-11.32 0l-48-48a8 8 0 0 1 11.32-11.32L128 212.69l42.34-42.35a8 8 0 0 1 11.32 0Zm-96-84.68L128 43.31l42.34 42.35a8 8 0 0 0 11.32-11.32l-48-48a8 8 0 0 0-11.32 0l-48 48a8 8 0 0 0 11.32 11.32Z" />
    </svg>
  )
}

export {
  IconEdit,
  IconNextChat,
  IconGitHub,
  IconSeparator,
  IconArrowDown,
  IconArrowRight,
  IconUser,
  IconPlus,
  IconArrowElbow,
  IconSpinner,
  IconMessage,
  IconTrash,
  IconRefresh,
  IconStop,
  IconSidebar,
  IconMoon,
  IconBpm,
  IconKcal,
  IconSun,
  IconCopy,
  IconCheck,
  IconDownload,
  IconClose,
  IconShare,
  IconUsers,
  IconExternalLink,
  IconChevronUpDown
}
